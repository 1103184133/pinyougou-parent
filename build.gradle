//集中定义版本号
def projectDeps =
        [
                "lombok"                        : "org.projectlombok:lombok:${lombokVersion}",
                //spring boot相关
                "spring-boot-gradle-plugin"     : "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                "spring-boot-starter"           : "org.springframework.boot:spring-boot-starter:${springBootVersion}",
                "spring-boot-starter-web"       : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                "spring-boot-starter-activemq"  : "org.springframework.boot:spring-boot-starter-activemq:${springBootVersion}",
                "spring-boot-starter-data-redis": "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
                "spring-boot-starter-data-solr" : "org.springframework.boot:spring-boot-starter-data-solr:${springBootVersion}",
                "spring-boot-starter-freemarker": "org.springframework.boot:spring-boot-starter-freemarker:${springBootVersion}",
                "spring-boot-starter-security"  : "org.springframework.boot:spring-boot-starter-security:${springBootVersion}",
                "spring-boot-starter-jdbc"      : "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}",
                "spring-boot-starter-test"      : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
                "spring-security-test"          : "org.springframework.security:spring-security-test:${springBootVersion}",
                //mybatis
                "mybatis-spring-boot-starter"   : "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}",
                "pagehelper-spring-boot-starter": "com.github.pagehelper:pagehelper-spring-boot-starter:${pageHelperVersion}",
                "mybatis-paginator"             : "com.github.miemiedev:mybatis-paginator:${mybatisPaginatorVersion}",
                "mysql-connector-java"          : "mysql:mysql-connector-java:${mysqlConnectorVersion}",
                //dubbo相关                
                "spring-boot-starter-dubbo"     : "com.gitee.reger:spring-boot-starter-dubbo:${dubboVersion}",
                "kaptcha"                       : "com.github.penggle:kaptcha:${kaptchaVersion}",
                "javassist"                     : "org.javassist:javassist:${javassistVersion}",
        ]

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    group = 'com.pinyougou'
    version = '1.0.0-SNAPSHOT'
    sourceCompatibility = 1.8


    repositories {
        mavenLocal()
        mavenCentral()
    }

    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
        }
    }

    ext {
        deps = {String name->
            return projectDeps[name]
        }
    }


    dependencies {
        compileOnly deps("lombok")
    }


    clean.doFirst {
        println('')
        println(project.file("/build.gradle"))
        println('before clean task')
        println('')
    }

    //打包源码
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier "sources"
    }



    publishing {
        publications {
            if(project.pluginManager.hasPlugin("org.springframework.boot")){
                bootJava(MavenPublication){
                    artifact bootJar
                }
                bootJavaWar(MavenPublication){
                    artifact bootWar
                }
            }else{
                maven(MavenPublication) {
                    //如果是war包填写components.web，如果是jar包填写components.java
                    from components.java
                    //配置上传源码
                    artifact sourceJar
                }
            }
        }
        repositories {
            maven {
                //本地仓库的位置
                url = "D:/repo/maven"
            }
        }
    }

    //所有任务以UTF-8编码执行（解决windows下编码不正确的bug，windows默认GB2312）
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

/*
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-freemarker')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly('mysql:mysql-connector-java')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}
*/

